[{"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\index.jsx":"1","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\UserContext.js":"2","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\serviceWorker.js":"3","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\App.jsx":"4","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\axiosInstance.js":"5","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\theme.js":"6","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\Navbar.jsx":"7","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\UserPage.jsx":"8","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\ArticlePage.jsx":"9","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Articles.jsx":"10","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Login.jsx":"11","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Home.jsx":"12","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\NotFound.jsx":"13","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\utils\\humanizeDate.js":"14","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\MarkdownRuntime.jsx":"15","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\ArticleCard.jsx":"16","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\ColorSwitch.jsx":"17","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\mdx.component.override.js":"18","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\utils\\sliceChar.js":"19","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\DrawerListImage.jsx":"20","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\LinkBtn.jsx":"21","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Register.jsx":"22","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\UpdateOnAuthor.jsx":"23"},{"size":805,"mtime":1608483344113,"results":"24","hashOfConfig":"25"},{"size":2138,"mtime":1608794518262,"results":"26","hashOfConfig":"25"},{"size":5227,"mtime":1605703057321,"results":"27","hashOfConfig":"25"},{"size":1714,"mtime":1608789263898,"results":"28","hashOfConfig":"25"},{"size":125,"mtime":1605713867964,"results":"29","hashOfConfig":"25"},{"size":458,"mtime":1608143998752,"results":"30","hashOfConfig":"25"},{"size":2350,"mtime":1608789246336,"results":"31","hashOfConfig":"25"},{"size":10333,"mtime":1609173551404,"results":"32","hashOfConfig":"25"},{"size":2435,"mtime":1608485355406,"results":"33","hashOfConfig":"25"},{"size":160,"mtime":1605707720780,"results":"34","hashOfConfig":"25"},{"size":4483,"mtime":1608790164508,"results":"35","hashOfConfig":"25"},{"size":2566,"mtime":1608484977958,"results":"36","hashOfConfig":"25"},{"size":170,"mtime":1605707145926,"results":"37","hashOfConfig":"25"},{"size":89,"mtime":1605762200476,"results":"38","hashOfConfig":"25"},{"size":313,"mtime":1606577795407,"results":"39","hashOfConfig":"25"},{"size":1831,"mtime":1608487487769,"results":"40","hashOfConfig":"25"},{"size":885,"mtime":1608143998752,"results":"41","hashOfConfig":"25"},{"size":980,"mtime":1608143998752,"results":"42","hashOfConfig":"25"},{"size":196,"mtime":1605761947849,"results":"43","hashOfConfig":"25"},{"size":5122,"mtime":1608794267837,"results":"44","hashOfConfig":"25"},{"size":331,"mtime":1608789246310,"results":"45","hashOfConfig":"25"},{"size":4354,"mtime":1608789872239,"results":"46","hashOfConfig":"25"},{"size":6781,"mtime":1609173919283,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ltdcw5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\index.jsx",[],["107","108"],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\UserContext.js",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\serviceWorker.js",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\App.jsx",["109","110","111"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Articles from \"./pages/Articles\";\r\nimport ArticlePage from \"./pages/ArticlePage\";\r\nimport theme from \"./theme\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport { UsersContext } from \"./UserContext\";\r\nimport {\r\n    ChakraProvider,\r\n    localStorageManager,\r\n    StylesProvider,\r\n} from \"@chakra-ui/react\";\r\nimport UserPage from \"./pages/UserPage\";\r\nimport Register from \"./pages/Register\";\r\n\r\nfunction App() {\r\n    const { isAuth, disconnect } = useContext(UsersContext);\r\n    return (\r\n        <>\r\n            <ChakraProvider\r\n                theme={theme}\r\n                colorModeManager={localStorageManager}\r\n            >\r\n                <StylesProvider>\r\n                    <Navbar isAuth={isAuth} disconnect={disconnect} />\r\n                    <Switch>\r\n                        <Route exact path={[\"/home\", \"/\"]} component={Home} />\r\n                        <Route\r\n                            path={[\"/article/:id\"]}\r\n                            exact\r\n                            component={ArticlePage}\r\n                        />\r\n                        <Route path={[\"/login\"]} component={Login} />\r\n                        <Route path={[\"/register\"]} component={Register} />\r\n                        <Route path={[\"/user\"]} component={UserPage} />\r\n                        <Route path=\"*\" component={NotFound} />\r\n                    </Switch>\r\n                </StylesProvider>\r\n            </ChakraProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\axiosInstance.js",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\theme.js",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\Navbar.jsx",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\UserPage.jsx",["112","113","114"],"import React, {Component, useContext, useEffect} from \"react\";\r\nimport {UsersContext} from \"../UserContext\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Container,\r\n    Flex,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    Input,\r\n    Modal,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay,\r\n    Stack,\r\n    Textarea,\r\n    useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport MarkdownRuntime from \"../components/MarkdownRuntime\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {DrawerListImage} from \"../components/DrawerListImage\";\r\nimport {Table, Tbody, Td, Thead, Tr} from \"@chakra-ui/table\";\r\nimport {BiEdit, BiTrash} from \"react-icons/bi\";\r\nimport {IconButton} from \"@chakra-ui/button\";\r\nimport {useToast} from \"@chakra-ui/toast\";\r\nimport UpdateModal from \"../components/UpdateOnAuthor\";\r\n\r\nclass WhenAuthor extends Component {\r\n    state = {\r\n        preview: \"\",\r\n    };\r\n    static contextType = UsersContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.disclosure = this.props.disclosure;\r\n        this.titre = React.createRef(null);\r\n        this.contenu = React.createRef(null);\r\n        this.cover = React.createRef(null);\r\n        this.description = React.createRef(null);\r\n    }\r\n\r\n    create() {\r\n        const data = {\r\n            titre: this.titre.current.value,\r\n            contenu: this.contenu.current.value,\r\n            cover: this.cover.current.value,\r\n            description: this.description.current.value,\r\n        };\r\n        axiosInstance\r\n            .post(\"Article/create\", data)\r\n            .then((response) => {\r\n                console.log(\"response.data\", response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    preview() {\r\n        this.setState({\r\n            ...this.state,\r\n            preview: this.contenu.current.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Stack as=\"form\" spacing={3} width={\"100%\"}>\r\n                    <FormControl id=\"titre\">\r\n                        <FormLabel>Titre</FormLabel>\r\n                        <Input\r\n                            ref={this.titre}\r\n                            type=\"text\"\r\n                            placeholder=\"Titre de votre article\"\r\n                            isRequired\r\n                            name=\"titre\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl id=\"description\">\r\n                        <FormLabel>Description</FormLabel>\r\n                        <Input\r\n                            ref={this.description}\r\n                            type=\"text\"\r\n                            placeholder=\"Description de votre article\"\r\n                            isRequired\r\n                            name=\"description\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl id=\"cover\">\r\n                        <FormLabel>Photo de couverture</FormLabel>\r\n                        <Input\r\n                            ref={this.cover}\r\n                            type=\"text\"\r\n                            placeholder=\"Photo de couverture de votre article\"\r\n                            isRequired\r\n                            name=\"description\"\r\n                        />\r\n                    </FormControl>\r\n                    <DrawerListImage/>\r\n                    <Textarea\r\n                        ref={this.contenu}\r\n                        placeholder=\"Contenu de votre article\"\r\n                        size=\"md\"\r\n                        h={500}\r\n                    />\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        colorScheme=\"green\"\r\n                        onClick={this.preview.bind(this)}\r\n                    >\r\n                        Preview\r\n                    </Button>\r\n                    <Box border=\"1px solid\" p={5} borderRadius={13}>\r\n                        <MarkdownRuntime>{this.state.preview}</MarkdownRuntime>\r\n                    </Box>\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        colorScheme=\"facebook\"\r\n                        onClick={this.create.bind(this)}\r\n                    >\r\n                        Créer un nouveau article article\r\n                    </Button>\r\n                </Stack>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nclass ModalAuthor extends Component {\r\n    static propTypes = {\r\n        onClick: PropTypes.func,\r\n        finalFocusRef: PropTypes.any,\r\n        open: PropTypes.bool,\r\n        onClose: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <Modal\r\n                finalFocusRef={this.props.finalFocusRef}\r\n                isOpen={this.props.open}\r\n                onClose={this.props.onClose}\r\n            >\r\n                <ModalOverlay zIndex={1}>\r\n                    <ModalContent maxWidth={[\"100%\", \"70%\"]}>\r\n                        <ModalHeader>\r\n                            Créer un article\r\n                        </ModalHeader>\r\n                        <ModalCloseButton/>\r\n                        <ModalBody>\r\n                            <WhenAuthor\r\n                                disclosure={{\r\n                                    isOpen: this.props.open,\r\n                                    onOpen: this.props.onClick,\r\n                                    onClose: this.props.onClose,\r\n                                }}\r\n                            />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                colorScheme=\"blue\"\r\n                                mr={3}\r\n                                onClick={this.props.onClose}\r\n                            >\r\n                                Fermer\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </ModalContent>\r\n                </ModalOverlay>\r\n            </Modal>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nconst UserPage = (props) => {\r\n    const toast = useToast();\r\n    const {user, isAuth} = useContext(UsersContext);\r\n    const {isOpen, onOpen, onClose} = useDisclosure();\r\n    const finalRef = React.useRef();\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            props.history.push(\"/\");\r\n        }\r\n    }, [isAuth])\r\n\r\n    const deleteUser = (id) => {\r\n        axiosInstance.delete(`Article/delete/${id}`).then(response => {\r\n            console.log(response)\r\n            toast({\r\n                title: \"Edit table\",\r\n                description: response.data.message,\r\n                status: \"success\",\r\n                duration: 2000,\r\n                isClosable: true,\r\n            });\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    function editUser(id) {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container maxW={[\"100%\", \"60%\"]}>\r\n                <Flex\r\n                    direction=\"column\"\r\n                    borderWidth={1}\r\n                    rounded={5}\r\n                    shadow=\"md\"\r\n                    pt={5}\r\n                    px={5}\r\n                    mt={5}\r\n                    pb={3}\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Heading\r\n                        as=\"h1\"\r\n                        size=\"xl\"\r\n                        textTransform=\"uppercase\"\r\n                        textAlign=\"left\"\r\n                        width={[\"100%\", \"70%\"]}\r\n                    >\r\n                        Votre compte\r\n                    </Heading>\r\n                    <Stack spacing={3} py={5} width={[\"100%\", \"70%\"]}>\r\n                        <FormControl id=\"username\">\r\n                            <FormLabel>Nom d'utilisateur</FormLabel>\r\n                            <Input\r\n                                defaultValue={user.username}\r\n                                type=\"name\"\r\n                                placeholder=\"Votre nom d'utilisateur est requis\"\r\n                                isRequired\r\n                                name=\"username\"\r\n                            />\r\n                        </FormControl>\r\n                        <Button variant=\"solid\" colorScheme=\"facebook\">\r\n                            Enregistrer\r\n                        </Button>\r\n                    </Stack>\r\n\r\n                    {user.isAuthor ? <>\r\n                        <Button onClick={onOpen} width=\"70%\">\r\n                            Créer un article\r\n                        </Button>\r\n                        <Table>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Td>Id</Td>\r\n                                    <Td>Titre</Td>\r\n                                    <Td>Action</Td>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {user.articles.map((value, index) => (\r\n                                    <Tr key={\"tr-\" + index}>\r\n                                        <td>\r\n                                            {value.id}\r\n                                        </td>\r\n                                        <td>\r\n                                            {value.title}\r\n                                        </td>\r\n                                        <td>\r\n                                            <UpdateModal title={value.title} id={value.id} />\r\n                                            <IconButton onClick={() => deleteUser(value.id)} colorScheme={\"red\"}\r\n                                                        icon={<BiTrash/>}/>\r\n                                        </td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                        </Table>\r\n                        <ModalAuthor finalFocusRef={finalRef} open={isOpen} onClose={onClose}/>\r\n                    </> : null}\r\n                </Flex>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserPage;\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\ArticlePage.jsx",["115","116"],"import {Button, Container, Divider, Heading, Image, Text} from \"@chakra-ui/react\";\r\nimport React, {Component} from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport humanizeDate from \"../utils/humanizeDate\";\r\nimport MarkdownRuntime from \"../components/MarkdownRuntime\";\r\nimport {Box, VStack} from \"@chakra-ui/layout\";\r\n\r\nclass ArticlePage extends Component {\r\n    state = {\r\n        article: {\r\n            titre: undefined,\r\n            contenu: undefined,\r\n            createdAt: undefined,\r\n            cover: undefined,\r\n            description: undefined,\r\n        },\r\n    };\r\n\r\n    componentDidMount() {\r\n        axiosInstance\r\n            .get(\"article/\" + this.props.match.params.id)\r\n            .then((repsponse) =>\r\n                this.setState({\r\n                    article: {\r\n                        ...repsponse.data,\r\n                        createdAt: humanizeDate(repsponse.data.createdAt),\r\n                    },\r\n                })\r\n            )\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container as={VStack} spacing={1} align={\"left\"} maxW={[\"100%\", \"95%\"]} pt={5}>\r\n\r\n                <Button onClick={this.props.history.goBack} width={\"80px\"} variant=\"outline\">\r\n                    Retour\r\n                </Button>\r\n                <Heading as=\"h1\" size=\"2xl\">\r\n                    {this.state.article.titre}\r\n                </Heading>\r\n                <Text>{this.state.article.createdAt}</Text>\r\n                <Heading as=\"h3\" size=\"md\">\r\n                    {this.state.article.description}\r\n                </Heading>\r\n                <Divider my={5}/>\r\n                    <Image\r\n                        borderTopLeftRadius={5}\r\n                        borderTopRightRadius={5}\r\n                        width={\"100%\"}\r\n                        height=\"200px\"\r\n                        objectFit=\"cover\"\r\n                        align={\"center\"}\r\n                        m={5}\r\n                        src={`${this.state.article.cover}`}\r\n                    />\r\n\r\n                {this.state.article.contenu ? (\r\n                    <MarkdownRuntime>\r\n                        {this.state.article.contenu}\r\n                    </MarkdownRuntime>\r\n                ) : null}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ArticlePage);\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Articles.jsx",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Login.jsx",["117","118"],"import {\r\n    Button,\r\n    Container,\r\n    Flex,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    Text,\r\n    Input,\r\n    Stack,\r\n} from \"@chakra-ui/react\";\r\nimport React, {useState} from \"react\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport {UsersContext} from \"../UserContext\";\r\nimport {LinkBtn} from \"../components/LinkBtn\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        message: \"\",\r\n    };\r\n    static contextType = UsersContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.username = React.createRef();\r\n        this.password = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {connect, isAuth} = this.context;\r\n        this.connect = connect;\r\n        this.isAuth = isAuth;\r\n        if (this.isAuth) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n        console.log('this.isAuth', this.isAuth)\r\n    }\r\n\r\n    loginData() {\r\n        this.setState({...this.state, loading: true})\r\n        axiosInstance\r\n            .post(\"Users/login\", {\r\n                username: this.username.current.value,\r\n                password: this.password.current.value,\r\n            })\r\n            .then((response) => {\r\n                this.connect(response.data);\r\n                console.log(response.data);\r\n                this.props.history.push(\"/\");\r\n                this.setState({...this.state, loading: false})\r\n            })\r\n            .catch((error) => {\r\n                    console.error(error);\r\n                    this.setState({...this.state, message: error?.response?.data.message, loading: false})\r\n                });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container maxW={[\"100%\", \"60%\"]}>\r\n                    <Flex\r\n                        direction=\"column\"\r\n                        borderWidth={1}\r\n                        rounded={5}\r\n                        shadow=\"md\"\r\n                        pt={5}\r\n                        px={5}\r\n                        mt={5}\r\n                        pb={3}\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Heading\r\n                            as=\"h1\"\r\n                            size=\"xl\"\r\n                            textTransform=\"uppercase\"\r\n                            textAlign=\"left\"\r\n                            width={[\"100%\", \"70%\"]}\r\n                        >\r\n                            Se connecter\r\n                        </Heading>\r\n                        <Text> {this.state.message}</Text>\r\n                        <Stack spacing={3} py={5} width={[\"100%\", \"70%\"]}>\r\n                            <FormControl id=\"username\">\r\n                                <FormLabel>Nom d'utilisateur</FormLabel>\r\n                                <Input\r\n                                    ref={this.username}\r\n                                    type=\"name\"\r\n                                    placeholder=\"Votre nom d'utilisateur est requis\"\r\n                                    isRequired\r\n                                    name=\"username\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl id=\"password\">\r\n                                <FormLabel>Mot de passe</FormLabel>\r\n                                <Input\r\n                                    ref={this.password}\r\n                                    placeholder=\"Mot de passe\"\r\n                                    type=\"password\"\r\n                                    isRequired\r\n                                    name=\"password\"\r\n                                />\r\n                            </FormControl>\r\n                            <Button\r\n                                isLoading={this.state.loading}\r\n                                onClick={this.loginData.bind(this)}\r\n                                variant=\"solid\"\r\n                                colorScheme=\"facebook\"\r\n                            >\r\n                                Connecter\r\n                            </Button>\r\n                            <LinkBtn textDecoration={\"underline\"} to={\"/register\"}>Je n'ai pas de compte</LinkBtn>\r\n                        </Stack>\r\n                    </Flex>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Home.jsx",["119","120","121","122","123"],"import {Box, Flex} from \"@chakra-ui/react\";\r\nimport React, {Component, useState} from \"react\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport ArticleCard from \"../components/ArticleCard\";\r\nimport Slider from \"react-slick\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {useBreakpointValue} from \"@chakra-ui/media-query\";\r\nimport {Container, Grid, Stack, VStack} from \"@chakra-ui/layout\";\r\n\r\nfunction SliderResponsive(props) {\r\n    const display = useBreakpointValue({base: \"none\", md: \"block\", sm: \"none\"});\r\n    return (\r\n        <Box display={display}>\r\n            <Slider\r\n                infinite={false}\r\n                dots={true}\r\n                arrows={false}\r\n                speed={500}\r\n                slidesToShow={4}\r\n                slidesToScroll={4}\r\n            >\r\n                {props.article.map(props.callbackfn)}\r\n            </Slider>\r\n        </Box>\r\n    )\r\n}\r\n\r\nSliderResponsive.propTypes = {\r\n    settings: PropTypes.shape({\r\n        dots: PropTypes.bool,\r\n        infinite: PropTypes.bool,\r\n        slidesToScroll: PropTypes.number,\r\n        slidesToShow: PropTypes.number,\r\n        speed: PropTypes.number\r\n    }),\r\n    article: PropTypes.any,\r\n    callbackfn: PropTypes.func\r\n}\r\n\r\nclass Home extends Component {\r\n    state = {article: []};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axiosInstance\r\n            .get(\"Article\")\r\n            .then((response) => {\r\n                console.log(\"response.data\", response.data);\r\n                this.setState({article: response.data});\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {/*<Flex flexWrap={\"wrap\"} direction=\"row\" p={5} justifyContent=\"center\">\r\n</Flex>*/}\r\n                <Container maxW={[\"80%\",\"60%\"]}>\r\n                    <VStack spacing={5} m={5}>\r\n                        {this.state.article.map(((value, index) => (\r\n                            <ArticleCard\r\n                                key={index}\r\n                                id={value.id}\r\n                                title={value.titre}\r\n                                cover={value.cover}\r\n                                createdAt={value.createdAt}\r\n                            >\r\n                                {value.description}\r\n                            </ArticleCard>\r\n                        )))}\r\n                    </VStack>\r\n                </Container>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\NotFound.jsx",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\utils\\humanizeDate.js",["124"],"import moment from \"moment\";\r\n\r\nexport default (datetime) => moment(datetime).fromNow(); ","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\MarkdownRuntime.jsx",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\ArticleCard.jsx",["125"],"import {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    Flex,\r\n    Heading,\r\n    Image,\r\n    Text,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport humanizeDate from \"../utils/humanizeDate\";\r\nimport sliceChar from \"../utils/sliceChar\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\n\r\nconst ArticleCard = ({ title, children, createdAt, id, cover, ...props }) => {\r\n    return (\r\n        <Flex\r\n            direction=\"column\"\r\n            borderWidth={1}\r\n            rounded={5}\r\n            shadow=\"md\"\r\n            justifyContent=\"space-between\"\r\n        >\r\n            <Image\r\n                borderTopLeftRadius={5}\r\n                borderTopRightRadius={5}\r\n                width=\"100%\"\r\n                height=\"200px\"\r\n                objectFit=\"cover\"\r\n                src={`${cover}`}\r\n            />\r\n            <Flex\r\n                px={5}\r\n                direction=\"column\"\r\n                justifyContent=\"space-between\"\r\n                height=\"100%\"\r\n            >\r\n                <Heading size=\"xl\">{title}</Heading>\r\n                <Text as=\"span\" fontSize=\"sm\" p={1}>\r\n                    {humanizeDate(createdAt)}\r\n                </Text>\r\n                <Text fontSize=\"md\">{sliceChar(children, 100)}</Text>\r\n            </Flex>\r\n            <Flex px={5} pt={1} direction=\"column\">\r\n                <Button\r\n                    rightIcon={<Box as={BsArrowRight} size=\"32px\" />}\r\n                    as={Link}\r\n                    to={\"/article/\" + id}\r\n                    my={1}\r\n                    variant=\"solid\"\r\n                    colorScheme=\"facebook\"\r\n                >\r\n                    Voir l'article <Box size=\"32px\" py={1} />\r\n                </Button>\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default ArticleCard;\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\ColorSwitch.jsx",["126","127"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    useColorMode,\r\n    useColorModeValue,\r\n    IconButton,\r\n    Box,\r\n} from \"@chakra-ui/react\";\r\nimport { GiSun,GiMoon } from \"react-icons/gi\";\r\n\r\nconst ColorSwitch = (props) => {\r\n    const { toggleColorMode } = useColorMode();\r\n    const text = useColorModeValue(\"dark\", \"light\");\r\n    const SwitchIcon = useColorModeValue(GiSun, GiMoon);\r\n    return (\r\n        <IconButton\r\n            {...props}\r\n            aria-label={`Switch to ${text} mode`}\r\n            variant=\"outline\"\r\n            rounded=\"100%\"\r\n            color=\"currentcolor\"\r\n            onClick={toggleColorMode}\r\n            icon={\r\n                <Box fontSize={25}>\r\n                    <SwitchIcon />\r\n                </Box>\r\n            }\r\n            size=\"md\"\r\n            fontSize=\"lg\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default ColorSwitch;\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\mdx.component.override.js",["128"],"import {  Heading, Text } from \"@chakra-ui/react\";\r\n\r\nexport default {\r\n\tp:{\r\n\t\tcomponent:Text\r\n\t},\r\n    h1: {\r\n        component: Heading,\r\n        props: {\r\n            size: \"2xl\",\r\n            my: 2,\r\n            as: \"h1\",\r\n        },\r\n    },\r\n    h2: {\r\n        component: Heading,\r\n        props: {\r\n            as: \"h2\",\r\n            size: \"xl\",\r\n            my: 2,\r\n        },\r\n    },\r\n    h3: {\r\n        component: Heading,\r\n        props: {\r\n            as: \"h3\",\r\n            size: \"lg\",\r\n            my: 2,\r\n        },\r\n    },\r\n    h4: {\r\n        component: Heading,\r\n        props: {\r\n            as: \"h4\",\r\n            size: \"md\",\r\n            my: 2,\r\n        },\r\n    },\r\n    h5: {\r\n        component: Heading,\r\n        props: {\r\n            as: \"h5\",\r\n            size: \"sm\",\r\n            my: 2,\r\n        },\r\n    },\r\n    h6: {\r\n        component: Heading,\r\n        props: {\r\n            as: \"h6\",\r\n            size: \"xs\",\r\n            my: 2\r\n        },\r\n    }\r\n};\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\utils\\sliceChar.js",["129"],"export default (text=\"\",length=300) => {\r\n    if(text.length>length){\r\n        const tmp = text.slice(0, length);\r\n        return tmp.slice(0,tmp.lastIndexOf(\" \"))+\"...\"\r\n    }\r\n    return text\r\n}","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\DrawerListImage.jsx",["130","131"],"import {\r\n    Button,\r\n    Drawer,\r\n    DrawerBody,\r\n    DrawerCloseButton,\r\n    DrawerContent,\r\n    DrawerFooter,\r\n    DrawerHeader,\r\n    DrawerOverlay,\r\n    Image,\r\n    List,\r\n    ListItem,\r\n    useClipboard,\r\n    useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport {MdRefresh} from \"react-icons/md\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport {\r\n    Modal,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay\r\n} from \"@chakra-ui/modal\";\r\nimport {Input} from \"@chakra-ui/input\";\r\nimport {Text} from \"@chakra-ui/layout\";\r\nimport {useToast} from \"@chakra-ui/toast\";\r\n\r\n\r\nconst ItemClipboard = ({path, setCopied, ...props}) => {\r\n    const value = `https://localhost:5001/${path}`;\r\n    const {onCopy, hasCopied} = useClipboard(value);\r\n    useEffect(() => {\r\n        if (hasCopied) {\r\n            setCopied(path);\r\n        }\r\n    }, [hasCopied])\r\n    return <Image src={value} onClick={onCopy}/>;\r\n}\r\n\r\n\r\nfunction UploadPhoto(props) {\r\n    const toast = useToast();\r\n    const {isOpen, onOpen, onClose} = useDisclosure();\r\n    const refForm = useRef(null);\r\n    const uploadFile = () => {\r\n        const form = new FormData(refForm.current);\r\n        axiosInstance.post(\"File/upload\", form)\r\n            .then(response => {\r\n                toast({\r\n                    position: \"top-right\",\r\n                    description: \"Image uploaded\",\r\n                    status: \"success\",\r\n                    duration: 2000,\r\n                    isClosable: true,\r\n                })\r\n                onClose();\r\n            })\r\n            .catch(error => {\r\n                toast({\r\n                    position: \"top-right\",\r\n                    title: \"An error occured\",\r\n                    description: error?.message,\r\n                    status: \"error\",\r\n                    duration: 2000,\r\n                    isClosable: true,\r\n                })\r\n            });\r\n    }\r\n    return <>\r\n        <Button onClick={onOpen} variant={\"solid\"} colorScheme={\"green\"}>\r\n            Upload new\r\n        </Button>\r\n        <Modal onClose={onClose} isOpen={isOpen}>\r\n            <ModalOverlay>\r\n                <ModalContent>\r\n                    <ModalHeader>Uploader une nouvelle image</ModalHeader>\r\n                    <ModalCloseButton/>\r\n                    <ModalBody>\r\n                        <form ref={refForm}>\r\n                            <Input name={\"image\"} type={\"file\"}/>\r\n                        </form>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme=\"green\" mr={3} onClick={uploadFile}>\r\n                            Send\r\n                        </Button>\r\n                        <Button variant=\"ghost\" coloSheme={\"red\"} onClick={onClose}>Close</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </ModalOverlay>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport const DrawerListImage = (props) => {\r\n    const {isOpen, onOpen, onClose} = useDisclosure();\r\n    const btnRef = React.useRef();\r\n    const [list, setList] = useState({image: []});\r\n    const [copied, setCopied] = useState(null);\r\n    const getAll = () => {\r\n        axiosInstance\r\n            .get(\"file\")\r\n            .then((response) => setList({image: response.data}))\r\n            .catch((error) => console.error(error));\r\n    }\r\n    const refresh = ()=>{\r\n        getAll()\r\n    } \r\n    useEffect(() => {\r\n        getAll()\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Button ref={btnRef} colorScheme=\"teal\" onClick={onOpen}>\r\n                Liste des Images\r\n            </Button>\r\n            <Drawer\r\n                isOpen={isOpen}\r\n                placement=\"right\"\r\n                onClose={onClose}\r\n                finalFocusRef={btnRef}\r\n            >\r\n                <DrawerOverlay zIndex={2}>\r\n                    <DrawerContent>\r\n                        <DrawerCloseButton/>\r\n                        <DrawerHeader>{Boolean(copied) ? `Vous avez copié ${copied}` : \"Selectionner une image!!\"}</DrawerHeader>\r\n\r\n                        <DrawerBody>\r\n                            <Button variant=\"outline\" my={3} onClick={refresh} as={MdRefresh}/>\r\n                            <List spacing={2}>\r\n                                {list.image.map((value, index) => (\r\n                                    <ListItem key={index}>\r\n                                        <ItemClipboard setCopied={setCopied} path={value.path}/>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </DrawerBody>\r\n\r\n                        <DrawerFooter>\r\n                            <UploadPhoto/>\r\n                            <Button variant=\"outline\" mx={3} onClick={onClose}>\r\n                                Close\r\n                            </Button>\r\n                        </DrawerFooter>\r\n                    </DrawerContent>\r\n                </DrawerOverlay>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\LinkBtn.jsx",[],"D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\pages\\Register.jsx",["132","133"],"import {\r\n    Button,\r\n    Container,\r\n    Flex,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    Text,\r\n    Input,\r\n    Stack,\r\n} from \"@chakra-ui/react\";\r\nimport React, {useState} from \"react\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport {UsersContext} from \"../UserContext\";\r\nimport {LinkBtn} from \"../components/LinkBtn\";\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        message: \"\",\r\n    };\r\n    static contextType = UsersContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.username = React.createRef();\r\n        this.password = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {connect, isAuth} = this.context;\r\n        this.connect = connect;\r\n        this.isAuth = isAuth;\r\n        if (this.isAuth) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n        console.log('this.isAuth', this.isAuth)\r\n    }\r\n\r\n    registerData() {\r\n        this.setState({...this.state, loading: true})\r\n        axiosInstance\r\n            .post(\"Users/create\", {\r\n                username: this.username.current.value,\r\n                password: this.password.current.value,\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push(\"/login\");\r\n                this.setState({...this.state, loading: false})\r\n            })\r\n            .catch((error) =>\r\n                this.setState({...this.state, message: error?.response?.data.message, loading: false})\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container maxW={[\"100%\", \"60%\"]}>\r\n                    <Flex\r\n                        direction=\"column\"\r\n                        borderWidth={1}\r\n                        rounded={5}\r\n                        shadow=\"md\"\r\n                        pt={5}\r\n                        px={5}\r\n                        mt={5}\r\n                        pb={3}\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Heading\r\n                            as=\"h1\"\r\n                            size=\"xl\"\r\n                            textTransform=\"uppercase\"\r\n                            textAlign=\"left\"\r\n                            width={[\"100%\", \"70%\"]}\r\n                        >\r\n                            Créer un compte\r\n                        </Heading>\r\n                        <Text> {this.state.message}</Text>\r\n                        <Stack spacing={3} py={5} width={[\"100%\", \"70%\"]}>\r\n                            <FormControl id=\"username\">\r\n                                <FormLabel>Nom d'utilisateur</FormLabel>\r\n                                <Input\r\n                                    ref={this.username}\r\n                                    type=\"name\"\r\n                                    placeholder=\"Votre nom d'utilisateur est requis\"\r\n                                    isRequired\r\n                                    name=\"username\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl id=\"password\">\r\n                                <FormLabel>Mot de passe</FormLabel>\r\n                                <Input\r\n                                    ref={this.password}\r\n                                    placeholder=\"Mot de passe\"\r\n                                    type=\"password\"\r\n                                    isRequired\r\n                                    name=\"password\"\r\n                                />\r\n                            </FormControl>\r\n                            <Button\r\n                                isLoading={this.state.loading}\r\n                                onClick={this.registerData.bind(this)}\r\n                                variant=\"solid\"\r\n                                colorScheme=\"facebook\"\r\n                            >\r\n                                Créer\r\n                            </Button>\r\n                            <LinkBtn textDecoration={\"underline\"} to={\"/login\"}>J'ai déjà un compte</LinkBtn>\r\n                        </Stack>\r\n                    </Flex>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Register);\r\n","D:\\Users\\FiSa\\Desktop\\App\\miniprojetc#\\GazetyFront\\src\\components\\UpdateOnAuthor.jsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"138","severity":1,"message":"142","line":1,"column":40,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"143","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":16},{"ruleId":"138","severity":1,"message":"144","line":28,"column":9,"nodeType":"140","messageId":"141","endLine":28,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":191,"column":8,"nodeType":"147","endLine":191,"endColumn":16,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"149","line":208,"column":14,"nodeType":"140","messageId":"141","endLine":208,"endColumn":22},{"ruleId":"138","severity":1,"message":"150","line":3,"column":9,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"151","line":7,"column":9,"nodeType":"140","messageId":"141","endLine":7,"endColumn":12},{"ruleId":"138","severity":1,"message":"142","line":12,"column":16,"nodeType":"140","messageId":"141","endLine":12,"endColumn":24},{"ruleId":"138","severity":1,"message":"152","line":13,"column":9,"nodeType":"140","messageId":"141","endLine":13,"endColumn":17},{"ruleId":"138","severity":1,"message":"153","line":1,"column":14,"nodeType":"140","messageId":"141","endLine":1,"endColumn":18},{"ruleId":"138","severity":1,"message":"142","line":2,"column":27,"nodeType":"140","messageId":"141","endLine":2,"endColumn":35},{"ruleId":"138","severity":1,"message":"154","line":8,"column":20,"nodeType":"140","messageId":"141","endLine":8,"endColumn":24},{"ruleId":"138","severity":1,"message":"155","line":8,"column":26,"nodeType":"140","messageId":"141","endLine":8,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":43,"column":5,"nodeType":"158","messageId":"159","endLine":45,"endColumn":6},{"ruleId":"160","severity":1,"message":"161","line":3,"column":1,"nodeType":"162","endLine":3,"endColumn":57},{"ruleId":"138","severity":1,"message":"163","line":4,"column":5,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"142","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"164","line":3,"column":1,"nodeType":"162","endLine":55,"endColumn":3},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","endLine":7,"endColumn":2},{"ruleId":"138","severity":1,"message":"165","line":29,"column":9,"nodeType":"140","messageId":"141","endLine":29,"endColumn":13},{"ruleId":"145","severity":1,"message":"166","line":40,"column":8,"nodeType":"147","endLine":40,"endColumn":19,"suggestions":"167"},{"ruleId":"138","severity":1,"message":"142","line":12,"column":16,"nodeType":"140","messageId":"141","endLine":12,"endColumn":24},{"ruleId":"138","severity":1,"message":"152","line":13,"column":9,"nodeType":"140","messageId":"141","endLine":13,"endColumn":17},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Articles' is defined but never used.","'BiEdit' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'editUser' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'Redirect' is defined but never used.","'Flex' is defined but never used.","'Grid' is defined but never used.","'Stack' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Divider' is defined but never used.","Assign object to a variable before exporting as module default","'Text' is defined but never used.","React Hook useEffect has missing dependencies: 'path' and 'setCopied'. Either include them or remove the dependency array. If 'setCopied' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [isAuth, props.history]",{"range":"176","text":"177"},"Update the dependencies array to be: [hasCopied, path, setCopied]",{"range":"178","text":"179"},[6499,6507],"[isAuth, props.history]",[962,973],"[hasCopied, path, setCopied]"]